# Generated by Django 5.1.7 on 2025-03-31 14:12

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='Unique URL-friendly identifier. Leave blank to auto-generate.', max_length=110, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description for this category.', null=True)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order in which categories appear (lower numbers first).')),
                ('parent', models.ForeignKey(blank=True, help_text="Select a parent category to create a sub-category (e.g., 'Facials' under 'Spa Treatments').", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='services.servicecategory')),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='The image file.', upload_to='gallery/')),
                ('caption', models.CharField(blank=True, help_text='Optional description for the image.', max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, help_text='Optional: Link image to a service category for filtering.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gallery_images', to='services.servicecategory')),
            ],
            options={
                'verbose_name': 'Gallery Image',
                'verbose_name_plural': 'Gallery Images',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Specific name of the service (e.g., 'Microblading', 'Classic Refill').", max_length=150)),
                ('slug', models.SlugField(blank=True, help_text='Unique URL-friendly identifier for this service (within its category). Leave blank to auto-generate.', max_length=160)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, help_text='Optional image for the service.', null=True, upload_to='services/')),
                ('duration', models.CharField(blank=True, help_text="e.g., '1 hour', '30 mins'", max_length=50, null=True)),
                ('price', models.DecimalField(decimal_places=0, help_text="Enter the price in base currency units (e.g., 45000 for 45k). Do not add currency symbols or 'k'.", max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_extra', models.BooleanField(default=False, help_text="Check if this is an 'Extra' service (like Lash Extras).")),
                ('is_touch_up_refill', models.BooleanField(default=False, help_text='Check if this is a Touch-up or Refill service.')),
                ('is_currently_offered', models.BooleanField(default=True, help_text='Is this service currently available to book?')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order within the category (lower numbers first).')),
                ('category', models.ForeignKey(help_text="Select the most specific category this service belongs to (e.g., 'Classic Lashes' service under 'Main Sets' category).", on_delete=django.db.models.deletion.CASCADE, related_name='services', to='services.servicecategory')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['category', 'display_order', 'name'],
                'unique_together': {('category', 'slug')},
            },
        ),
    ]
